{"version":3,"sources":["../src/socket.js"],"names":["socketIo","roomId","createSocket","app","server","require","createServer","callback","path","on","socket","console","log","JSON","stringify","handshake","query","join","emit","data","leave","sendLog","sockets","in"],"mappings":";;;;;;AAAA,IAAIA,QAAQ,GAAG,EAAf;AAEO,MAAMC,MAAM,GAAG,QAAf;;;AACA,MAAMC,YAAY,GAAIC,GAAD,IAAS;AACjC,QAAMC,MAAM,GAAGC,OAAO,CAAC,MAAD,CAAP,CAAgBC,YAAhB,CAA6BH,GAAG,CAACI,QAAJ,EAA7B,CAAf;;AAEAP,EAAAA,QAAQ,GAAGK,OAAO,CAAC,WAAD,CAAP,CAAqBD,MAArB,EAA6B;AACpCI,IAAAA,IAAI,EAAE;AAD8B,GAA7B,CAAX;AAIAR,EAAAA,QAAQ,CAACS,EAAT,CAAY,YAAZ,EAA2BC,MAAD,IAAY;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAa,aAAYC,IAAI,CAACC,SAAL,CAAeJ,MAAM,CAACK,SAAP,CAAiBC,KAAjB,IAA0B,EAAzC,CAA6C,EAAtE;AACAN,IAAAA,MAAM,CAACO,IAAP,CAAYhB,MAAZ;AAEAS,IAAAA,MAAM,CAACQ,IAAP,CAAY,YAAZ,EAA0B,MAA1B;AAEAR,IAAAA,MAAM,CAACD,EAAP,CAAU,YAAV,EAAwB,UAASU,IAAT,EAAe;AACnCR,MAAAA,OAAO,CAACC,GAAR,CAAa,aAAYC,IAAI,CAACC,SAAL,CAAeJ,MAAM,CAACK,SAAP,CAAiBC,KAAjB,IAA0B,EAAzC,CAA6C,EAAtE;AACAN,MAAAA,MAAM,CAACU,KAAP,CAAanB,MAAb;AACH,KAHD;AAIH,GAVD;AAWA,SAAOG,MAAP;AACH,CAnBM;;;;AAyBA,MAAMiB,OAAO,GAAIF,IAAD,IAAU;AAC7BnB,EAAAA,QAAQ,CAACsB,OAAT,CAAiBC,EAAjB,CAAoBtB,MAApB,EAA4BiB,IAA5B,CAAiC,KAAjC,EAAwCC,IAAxC;AACH,CAFM","sourcesContent":["let socketIo = {};\n\nexport const roomId = 'thanos';\nexport const createSocket = (app) => {\n    const server = require('http').createServer(app.callback());\n    // 创建socket实例\n    socketIo = require('socket.io')(server, {\n        path: '/api/ks-thanos-ui-server/v1/socket'\n    });\n    // 连接事件\n    socketIo.on('connection', (socket) => {\n        console.log(`有客户端连接成功: ${JSON.stringify(socket.handshake.query || {})}`);\n        socket.join(roomId);\n\n        socket.emit('connection', '连接成功');\n        // 断开事件\n        socket.on('disconnect', function(data) {\n            console.log(`有客户端失去连接: ${JSON.stringify(socket.handshake.query || {})}`);\n            socket.leave(roomId);\n        });\n    });\n    return server;\n};\n\n/**\n * @desc 发送日志\n * @param data\n */\nexport const sendLog = (data) => {\n    socketIo.sockets.in(roomId).emit('log', data);\n};\n"],"file":"socket.js"}