{"version":3,"sources":["../../src/controllers/file.js"],"names":["async","context","path","query","files","fs","readdirSync","items","filter","f","startsWith","map","fpath","type","size","createdAt","updatedAt","stat","statSync","isDirectory","birthtimeMs","mtimeMs","err","name","console","log","JSON","stringify","body","code","result"],"mappings":";;;;;;;AAAA;;;;AAEe,SAASA,KAAT,CAAeC,OAAf,EAAwB;AACnC,QAAMC,IAAI,GAAGD,OAAO,CAACE,KAAR,CAAcD,IAAd,IAAsB,GAAnC;;AAEA,QAAME,KAAK,GAAGC,YAAGC,WAAH,CAAeJ,IAAf,CAAd;;AAEA,MAAIK,KAAK,GAAG,CAACH,KAAK,IAAI,EAAV,EAAcI,MAAd,CAAsBC,CAAD,IAAO,CAACA,CAAC,CAACC,UAAF,CAAa,GAAb,CAA7B,EAAgDC,GAAhD,CAAqDF,CAAD,IAAO;AACnE,UAAMG,KAAK,GAAGV,IAAI,GAAG,GAAP,GAAaO,CAA3B;AACA,QAAII,IAAI,GAAG,MAAX;AAAA,QACIC,IAAI,GAAG,CADX;AAAA,QAEIC,SAAS,GAAG,IAFhB;AAAA,QAGIC,SAAS,GAAG,IAHhB;;AAIA,QAAI;AACA,YAAMC,IAAI,GAAGZ,YAAGa,QAAH,CAAYN,KAAZ,CAAb;;AACAC,MAAAA,IAAI,GAAGI,IAAI,CAACE,WAAL,KAAqB,KAArB,GAA6BN,IAApC;AACAC,MAAAA,IAAI,GAAGG,IAAI,CAACH,IAAZ;AACAC,MAAAA,SAAS,GAAGE,IAAI,CAACG,WAAjB;AACAJ,MAAAA,SAAS,GAAGC,IAAI,CAACI,OAAjB;AACH,KAND,CAME,OAAOC,GAAP,EAAY,CACb;;AACD,WAAO;AACHC,MAAAA,IAAI,EAAEd,CADH;AAEHI,MAAAA,IAFG;AAGHC,MAAAA,IAHG;AAIHC,MAAAA,SAJG;AAKHC,MAAAA;AALG,KAAP;AAOH,GArBW,CAAZ;AAuBAQ,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAepB,KAAf,CAAZ;AACAN,EAAAA,OAAO,CAAC2B,IAAR,GAAe;AACXC,IAAAA,IAAI,EAAE,CADK;AAEXC,IAAAA,MAAM,EAAEvB;AAFG,GAAf;AAIH","sourcesContent":["import fs from 'fs';\n\nexport default function async(context) {\n    const path = context.query.path || '/';\n\n    const files = fs.readdirSync(path);\n\n    let items = (files || []).filter((f) => !f.startsWith('.')).map((f) => {\n        const fpath = path + '/' + f;\n        let type = 'file',\n            size = 0,\n            createdAt = null,\n            updatedAt = null;\n        try {\n            const stat = fs.statSync(fpath);\n            type = stat.isDirectory() ? 'dir' : type;\n            size = stat.size;\n            createdAt = stat.birthtimeMs;\n            updatedAt = stat.mtimeMs;\n        } catch (err) {\n        }\n        return {\n            name: f,\n            type,\n            size,\n            createdAt,\n            updatedAt\n        };\n    });\n\n    console.log(JSON.stringify(items));\n    context.body = {\n        code: 0,\n        result: items\n    };\n}\n"],"file":"file.js"}